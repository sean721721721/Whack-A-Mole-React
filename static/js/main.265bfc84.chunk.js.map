{"version":3,"sources":["store/index.js","Score.js","Mole.js","Hole.js","App.js","reportWebVitals.js","index.js"],"names":["INITIAL_STATE","score","holeIndex","start","store","createStore","state","action","type","Score","props","className","Mole","dispatch","useDispatch","onClick","e","console","log","Hole","React","forwardRef","ref","index","setStart","boolean","App","useSelector","holes","useRef","buttonRef","randomHole","idx","Math","floor","random","length","peep","min","max","time","hole","current","classList","add","setTimeout","remove","setLastHoleIndex","startGame","stopGame","useEffect","timeout","clearTimeout","Array","fill","map","target","textContent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.265bfc84.chunk.js","sourcesContent":["import { createStore } from 'redux';\r\n\r\nconst INITIAL_STATE = {\r\n  score: 0,\r\n  holeIndex: 0,\r\n  start: false,\r\n}\r\n\r\nfunction tasks(state = INITIAL_STATE, action) {\r\n    // console.log('current state: ', state);\r\n    // console.log('Action: ', action);\r\n  switch (action.type) {\r\n    case 'INCREASE_SCORE':\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tscore: state.score + 1\r\n        }\r\n\r\n\tcase 'SET_HOLE_INDEX':\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tholeIndex: action.holeIndex\r\n        }\r\n\r\n    case 'SET_START':\r\n        return {\r\n            ...state,\r\n\t\t\tstart: action.start\r\n        }\r\n\r\n    case 'SET_INITIAL_STATE':\r\n        return {\r\n            ...INITIAL_STATE,\r\n            start: true,\r\n        };\r\n\tdefault:\r\n\t\treturn state;\r\n  }\r\n}\r\n\r\nconst store = createStore(tasks);\r\n\r\nexport default store;","import React from 'react';\r\n\r\n\r\nconst Score = props => {\r\n    const { score } = props\r\n    return (\r\n        <span className=\"score\">{score}</span>\r\n    )\r\n}\r\n\r\nexport default Score;","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nconst increaseScore = () => {\r\n    return { type: 'INCREASE_SCORE'}\r\n}\r\n\r\nconst Mole = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClick = e => {\r\n        console.log(e);\r\n        dispatch(increaseScore());\r\n    }\r\n    return (\r\n        <div className=\"mole\" onClick={handleClick}>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Mole;","import React, { useEffect, useRef } from 'react';\r\nimport Mole from './Mole';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nconst Hole = React.forwardRef((props, ref) => {\r\n    const { index } = props;\r\n\r\n    return (\r\n        <div ref={ref} className={`hole hole${index}`}>\r\n            <Mole />\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Hole;","import React, { useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Score from './Score';\nimport Hole from './Hole';\nimport './App.scss';\n\nconst setStateToInit = () => {\n  return { type: 'SET_INITIAL_STATE'};\n}\n\nconst setLastHoleIndex = (holeIndex) => {\n  return { type: 'SET_HOLE_INDEX', holeIndex }\n}\n\nconst setStart = (boolean) => {\n  return { type: 'SET_START', start: boolean }\n}\n\nfunction App() {\n  const { score, holeIndex, start }= useSelector(state => state);\n  // console.log({ score, holeIndex, start })\n  const holeCount = 6;\n  const dispatch = useDispatch();\n  \n  let holes = [useRef(),useRef(),useRef(),useRef(),useRef(),useRef()];\n  let buttonRef = useRef(null);\n\n  const randomTime = (min, max) => {\n    const time = Math.random() * (max - min) + min;\n    return time;\n  }\n\n  const randomHole = (holes) => {\n    const idx = Math.floor(Math.random() * holes.length);\n    if (idx === holeIndex) {\n      return randomHole(holes);\n    }\n    return idx;\n  }\n\n  const peep = () => {\n    console.log('peep!');\n    const time = randomTime(200, 1000);\n    const index = randomHole(holes);\n    const hole = holes[index].current;\n    hole.classList.add('up');\n    setTimeout(() => {\n      hole.classList.remove('up');\n      dispatch(setLastHoleIndex(index));\n    }, time);\n  }\n\n  const handleClick = (e) => {\n    let text = e.target.textContent;\n    if (text === 'START!') {\n      e.target.textContent = \"STOP!\";\n      startGame();\n    } else {\n      e.target.textContent = \"START!\";\n      stopGame();\n    }\n  }\n\n  const startGame = () => {\n    console.log('start!')\n    dispatch(setStateToInit());\n  }\n\n  const stopGame = () => {\n    console.log('stop!');\n    dispatch(setStart(false));\n  }\n\n  useEffect(() => {\n    let timeout;\n    let peepDuration;\n    if (start) {\n      timeout = setTimeout(() => {\n        console.log(\"time's up\");\n        dispatch(setStart(false));\n      }, 5000);\n\n      peep();\n    \n    } \n    return () => clearTimeout(timeout);\n  }, [holeIndex, start]);\n  \n  return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>WHACK A MOLE! <Score score={score} /></h1>\n        </header>\n        <div className=\"game\">\n          {Array(holeCount).fill('').map((hole, index) => \n            <Hole ref={holes[index]} index={index} />\n          )}\n        </div>\n        <button ref={buttonRef} onClick={handleClick}>{start ? \"STOP!\" : \"START!\"}</button>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}